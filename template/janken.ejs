<!DOCTYPE HTML>

<html>
    <head>
        <meta charset="UTF-8" />
        <title>Janken : Battle !</title>
        <link rel="stylesheet" href="/css/screen.css" />
        <link rel="stylesheet" href="/css/styles.css" />
        <link rel="stylesheet" href="/css/fonts.css" />
        <link rel="stylesheet" href="/css/flaticon.css" />
    </head>

    <body>
        <div class="logo">
            <img src="img/logo.png" width="100" />
        </div>

        <header>
            <ul class="menu">
                <li class="user">
                    <div class="flaticon-user127"> <%= user.username %></div>
                </li>
                <li class="room">
                    <div class="flaticon-fivepointed4"> Room <%=user.room %></div>
                </li>
                <li class="all_users">
                    <div class="flaticon-group60"> <a href="#">Voir tous les utilisateurs</a></div>
                </li>

                <li class="all_users">
                    <form action="" class="QuitForm">
                        <input type="submit" value="Quit" />
                    </form>
                </li>
            </ul>
        </header>

        <div class="container">
            <h1>Bienvenue sur Janken <b class="welcome"><%= user.username %></b> !</h1>

            <form action="" class="leftRoomForm">
                <input type="hidden" value="<%=user.room%>" />
                <input type="submit" class="room" value="Quitter la room n°<%=user.room%>" />
            </form>

            <h3>Room n°<span class="number_room"><%= user.room %></span></h3>

            <ul class="room_users">
                <% for(var i = 0; i < people.length; i++) { %>
                    <li><%= people[i] %></li>
                <% } %>
            </ul>

            <select name="choose_color" class="choose_color">
                <option value="red">Rouge</option>
                <option value="blue">Bleu</option>
                <option value="yellow">Jaune</option>
                <option value="black">Noir</option>
            </select>

            <ul class="janken_buttons">
                <li><button>Pierre</button></li>
                <li><button>Feuille</button></li>
                <li><button>Ciseaux</button></li>
            </ul>

            <div class="janken"></div>

            <br />
            <div>Votre score est de : <span class="score">0</span></div>

            <div class="battle"></div>
        </div>

        

        <script src="http://code.jquery.com/jquery-1.11.2.min.js"></script>
        <script src="/socket.io/socket.io.js"></script>
        <script src="/connect_io.js"></script>


        <script>
            $(document).ready(function() {
                
                var domicile = '';
                var exterieur = '';
                var deja_joue = 0;
                var score = 0;
                var color_domicile = 'red';
                var color_exterieur = 'red';
                var playing = false;
                var new_Battle;

                // Lorsqu'on retourne à la home, on envoie un message au server pour dire qu'on quitte la room
                $('.leftRoomForm').on('submit', function(e) {
                    e.preventDefault();
                    var room_id = $(this).find('input[type=hidden]').val();
                    var username = $('.welcome').text();

                    socket.emit('I_leftRoom', {
                        username: username, 
                        room_id : room_id
                    });

                    $.post(app_url+"/leftRoom",{room_id:room_id},function(data){
                        if(data === 'done') {
                            document.location="/";
                        }
                    });
                });

                // Déconnexion
                $(document).on('submit', '.QuitForm', function(e) {

                    e.preventDefault();
                    $.post(app_url+"/quitGame",function(data){
                    });
                });

                // On envoie un message au serveur pour dire qu'on a rejoint la room
                socket.emit('I_roomJoined');

                // Lors de l'arrivée d'un nouveau user, on ajoute son nom à la liste
                socket.on('newUserBroadcast', function(user) {
                    $('.room_users').append('<li>'+user.user.username+'</li>');
                });

                // Lorsqu'un user quitte la room, on le retire de la liste
                socket.on('userLeft', function(user) {
                    domicile = '';
                    exterieur = '';
                    $('.janken').empty();
                    $('.janken').append('<p>L\'adversaire est parti, en attente d\'un adversaire</p>');

                    $('.room_users li').each(function() {
                        if(user.username == $(this).text()) {
                            $(this).remove();
                        }
                    });
                });

                // Lorsqu'on choisit sa couleur, on envoie un message au serveur pour prévenir l'adversaire
                $('.choose_color').on('change', function() {
                    var room_id = $('.number_room').text();
                    color_domicile = $(this).val();

                    socket.emit('I_changeColor', {
                        color: color_domicile, 
                        room_id : room_id
                    });
                });

                // Lorsque l'adversaire change sa couleur
                socket.on('changeColorBroadcast', function(color) {
                    color_exterieur = color.color;
                });


                /*
                *   PARTIE JANKEN
                */

                // Lorsque le combat s'enclenche
                socket.on('janken', function(janken) {
                    if(playing == false) {
                        exterieur = janken.janken;

                        if(domicile !== '') { // Lorsque l'adversaire a joué, si on a déjà joué
                            
                            if(deja_joue === 0) {
                                $('.janken').append('<p>Vous avez joué <b>'+domicile+'</b></p>');
                            }
                            $('.janken').append('<p>Votre adversaire a joué <b>'+exterieur+'</b></p>');
                            calculScore(domicile, exterieur);
                        }
                    }
                });

                // Au clic sur un des boutons de jeu
                $('ul li button').click(function() {
                    if(playing == false) {

                        if($('.room_users li').length > 1) {
                            $('.janken').empty();

                            socket.emit('I_janken', {play: $(this).text(), room_id : $('.number_room').text() });
                            domicile = $(this).text();

                                $('.janken').append('<p>Vous avez joué <b>'+domicile+'</b></p>');
                                deja_joue = 1;

                                if(exterieur !== '') { // Lorsqu'on joue, si l'adversaire a déjà joué
                                    $('.janken').append('<p>Votre adversaire a joué <b>'+exterieur+'</b></p>');
                                    calculScore(domicile, exterieur);
                                }
                        } else {
                            $('.janken').append('<p>Attendez d\'avoir un adversaire pour commencer à jouer.</p>');
                        }
                    }

                });

                function calculScore(first, second) {
                    if(playing == false) {
                        if(first === 'Ciseaux') {
                            if(second === 'Pierre') {
                                battle('ciseaux_left', 'pierre_right', 0);
                            } else if(second === 'Feuille') {
                                battle('ciseaux_left', 'feuille_right', 1);
                            } else if(second === 'Ciseaux') {
                                battle('ciseaux_left', 'ciseaux_right', 2);
                            }
                        } else if(first === 'Pierre') {
                            if(second === 'Feuille') {
                                battle('pierre_left', 'feuille_right', 0);
                            } else if(second === 'Ciseaux') {
                                battle('pierre_left', 'ciseaux_right', 1);
                            } else if(second === 'Pierre') {
                                battle('pierre_left', 'pierre_right', 2);
                            }
                        } else if(first === 'Feuille') {
                            if(second === 'Ciseaux') {
                                battle('feuille_left', 'ciseaux_right', 0);
                            } else if(second === 'Pierre') {
                                battle('feuille_left', 'pierre_right', 1);
                            } else if(second === 'Feuille') {
                                battle('feuille_left', 'feuille_right', 2);
                            }
                        }
                    }
                }

                function battle(left, right, result) {

                    playing = true;

                    new_Battle =
                        '<div class="'+left+' left">' +
                            '<div class="block_rect" style="background-color:'+color_domicile+'"></div>'+
                            '<div class="circle_center" style="background-color:'+color_domicile+'"></div>'+
                            '<img src="/img/'+left+'.png" width="300" />' +
                        '</div>' +
                        '<div class="'+right+' right">' +
                            '<div class="block_rect" style="background-color:'+color_exterieur+'"></div>'+
                            '<div class="circle_center" style="background-color:'+color_exterieur+'"></div>'+
                            '<img src="/img/'+right+'.png" width="300" />' +
                        '</div>'
                    ;

                    $('.battle').append(new_Battle);
                    $('.battle').css('z-index', '200');

                    $('.'+left).animate({
                        left: "+=100",
                      }, 550, function() {
                        $('.'+left).animate({
                            left: "-=100",
                          }, 150, function() {
                        });
                    });

                    $('.'+right).animate({
                        right: "+=100",
                      }, 550, function() {
                        $('.'+right).animate({
                            right: "-=100",
                          }, 150, function() {
                        });
                    });

                    endBattle(result);
                }

                function endBattle(result) {

                    setTimeout(function() {
                        $('.battle').empty();
                        if(result === 0) {
                            $('.battle').append('<h1>DEFAITE !</h1>');
                        } else if(result === 1) {
                            $('.battle').append('<h1>VICTOIRE !</h1>');
                            score++;
                        } else if(result === 2) {
                            $('.battle').append('<h1>MATCH NUL !</h1>');
                        }

                        setTimeout(function() {
                            playing = false;
                            $('.battle').empty();
                            $('.battle').css('z-index', '-1');
                            $('.janken').empty();
                            $('.score').text(score);
                            domicile = '';
                            exterieur = '';
                            deja_joue = 0;
                        }, 1000);
                    }, 1500);
                }
            });

        </script>
        
    </body>
</html>
