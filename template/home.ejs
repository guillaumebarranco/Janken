<!DOCTYPE HTML>

<html>
	<head>
		<meta charset="UTF-8" />
        <title>Janken : Home</title>
        <link rel="stylesheet" href="/css/screen.css" />
        <link rel="stylesheet" href="/css/styles.css" />
        <link rel="stylesheet" href="/css/fonts.css" />
        <link rel="stylesheet" href="/css/flaticon.css" />
        <link rel="shortcut icon" href="/img/favicon.ico" type="image/x-icon">
	</head>

	<body>
		<div class="logo">
			<img src="/img/logo.png" width="100" />
		</div>

		<header>
			<ul class="menu">
				<li class="user">
					<div class="flaticon-user127"> <%= user.username %></div>
				</li>
				<li class="room">
					<div class="flaticon-fivepointed4">Sur la Home</div>
				</li>
				<li class="all_users">
					<div class="flaticon-group60"><a href="#">Voir tous les utilisateurs</a></div>
					<ul style='background: black; padding: 5px;'>
						<% for (var u = 0; u < usernames.length; u++) { %>
							<li><%= usernames[u] %></li>
						<% } %>
					</ul>
				</li>
				<% if(user.username !== 'inconnu') { %>
					<li class="all_users">
	                    <form action="" class="QuitForm">
	                    	<input type="hidden" value="<%= user.username %>"/>
							<input type="submit" value="Quit" />
						</form>
	                </li>
	            <% } %>
			</ul>
		</header>

		<div class="container">
			<h1>Bienvenue sur Flat Janken !</h1>

			<% if(user.username !== 'inconnu') { %>

				<section class="section_second">
					<p>
						Sois le bienvenue sur Janken <b class="welcome"><%= user.username %></b> ! <br />
						Tu peux sans plus attendre choisir une session de jeu !
					</p>

					<% for (var r = 1; r < 4; r++) { %>
					    <form action="" class="roomForm"><span class="info_room_<%=r%>"><%= rooms[r].length %></span> / 2
							<input type="hidden" value="<%=r%>" />
							<input type="submit"class="room" value="Room <%=r%>" />
						</form>
					<% } %>

				</section>

			<% } else { %>
				<section class="section_first">

					<p>
						Pour entrer dans une session de jeu, vous devez vous créer un pseudo ! <br />
						Ecrivez votre pseudo puis jouez avec vos amis !
					</p>

					<p class="error"></p>

					<form action="" id="loginForm">
						<input type="text" name="username" class="username" />
						<input class="validation button-submit" type="submit" value="Entrer" />
					</form>
				</section>

			<% } %>
		</div>

		<footer>
			<div class="copyright">@Webarranco</div>
		</footer>

		<script src="http://code.jquery.com/jquery-1.11.2.min.js"></script>
		<script src="/socket.io/socket.io.js"></script>
        <script src="/connect_io.js"></script>

		<script>

			$(document).ready(function() {
				var my_username = $('.welcome').text();

				$('.all_users').find('ul').hide();

				// Check pour vérifier si le user est toujours connecté à une room ou non
				socket.emit('I_onHome', {username: my_username});

				// Connexion
				$('#loginForm').submit(function(e) {
					e.preventDefault();
					var username = $('.username').val();
					if($('.username').val() !== '' && username !== null && username !== undefined) {
						$.post(app_url+"/login",{username:username},function(data){
							if(data === 'done') {
								socket.emit('I_login', {username:username});
					            setTimeout(function() {
					            	document.location="/";
					            }, 400);
				            }
						});
					}
				});

				// Lorsque le user rejoint une room
				$(document).on('submit', '.roomForm', function(e) {

					e.preventDefault();
					var room_id = $(this).find('input[type=hidden]').val();

					$.post(app_url+"/joinRoom",{room_id:room_id},function(data){
						if(data === 'OK') {
							socket.emit('I_joinRoom', {room_id: room_id});
			                document.location = "/janken";
			            } else if(data === 'KO') {
			            	alert('déjà trop de personnes dans cette room');
			            }
					});
				});

				// Lorsqu'un nouveau user apparait, on l'ajoute à la liste
				socket.on('logged', function(user) {
					$('.all_users ul').append('<li>'+user.username+'</li>');
	            });

				// Lorsqu'un utilisateur se déconnecte, on le supprime de la liste
	            socket.on('userLeaveGame', function(user) {
	            	alert(user.username);
	            	$('.all_users ul li').each(function() {
	                    if(user.username == $(this).text()) {
	                        $(this).remove();
	                    }
	                });
	            });

	            // Formulaire de déconnexion
				$(document).on('submit', '.QuitForm', function(e) {
					var username = $(this).find('input[type=hidden]').val();
					e.preventDefault();

					$.post(app_url+"/quitGame",function(data){
						socket.emit('I_leaveGame', {username: username});
						setTimeout(function() {
			            	document.location="/";
			            }, 400);
					});
				});

				// Mise à jour des rooms en temps réel
				socket.on('infoRoom', function(room) {
					var number_in_room = parseInt($('.info_room_'+room.room_id).text()) + 1;
	                $('.info_room_'+room.room_id).text(number_in_room);
	            });
	            socket.on('infoLeftRoom', function(room) {
					var number_in_room = parseInt($('.info_room_'+room.room_id).text()) - 1;
	                $('.info_room_'+room.room_id).text(number_in_room);
	            });

				$('.all_users a').on('click', function(e) {
					e.preventDefault();
					var ul = $(this).parent().parent().find('ul');

					if(ul.css('display') == 'none') {
						ul.slideDown();
					} else {
						ul.slideUp();
					}
				});
				
			});

		</script>

	</body>
</html>
